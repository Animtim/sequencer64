README for Sequencer64 0.90.2 (Native JACK)
Chris Ahlstrom
2015-09-10 to 2017-03-26 (initial work started in July of 2015)

Sequencer64 is a reboot of seq24.  It extends seq24 in functionality and bug
fixes, although the heart of seq24 remains intact.  See the screenshot in the
project root for some idea of what has changed visually.  It is an old friend
with some user-interface lipstick and a lot of internal fixups.  It maintains
backward-compatibility with seq24, with the --legacy option.  See
https://github.com/ahlstromcj/sequencer64-doc.git.

There are some MAJOR changes now.  Be prepared to regress to the 0.9.21 tagged
version should you encounter any show-stoppers in your workflow.  Please see
the INSTALL file for new build instructions.

Native JACK support: Seq64rtmidi/seq64

    Sequencer64 can now be built with native JACK support.  It features
    virtual ports and auto-connect like the ALSA version.  It is based on a
    heavily refactored RtMidi library; it will fall back to ALSA support if
    JACK is not running.  It works, but we have a lot of cleanup and
    efficiency work to do.  Consider it experimental.  See the INSTALL file
    for the options.  See README.jack for basic instructions on native JACK
    until we can get the Sequencer64 manual up-to-date.

Legacy Sequencer64: Sequencer64/sequencer64

    This is the original version of the project, which we are preserving until
    the bug reports for the native-JACK version slow down to a trickle.

PortMIDI: Seq64portmidi/seq64portmidi

    This implementation builds and runs with the portmidi library in a Linux
    distro.  This version has issues and is deprecated; we would implement
    Windows support using the RtMidi code.

With the big version jump from 0.9 to 0.90, the install process has changed.
See the INSTALL file.  There are now three different versions of Sequencer64
that can be built, as noted above.

Major new updates:

    -   Version 0.90.2:
        -   Some minor bugs, such as mute status (mainwid) and playback status
            (seqedit) not being in synch..
        -   Functions for SEQ64_APP_NAME and SEQ64_CLIENT_NAME.
        -   Extended MIDI controls for Stop / Pause / Start, and coarse BPM
            settings.
    -   Version 0.90.1:
        -   Fixes a JACK naming and connection issue when accessing ports
            exposed by a2jmidid.
        -   Fixes a long-standing (back to seq24) issue where the Free
            selection in the pattern editor would still set the MIDI input to
            a fixed velocity.
    -   Version 0.90.0:
        -   Initial support for using a heavily-refactored RtMidi spinoff
            library to support native JACK MIDI (as opposed to just JACK
            transport).  RtMidi turned out not to match the model of
            Sequencer64 very well, so to call it an "RtMidi" version is very
            misleading.
        -   PortMidi has been activated!  Builds and runs in Linux, still
            need to set up Gtk for Windows.  However, it has issues currently,
            and we are going to eventually deprecate it.
    -   Version 0.9.21:
        -   Returning to the std::list operation, but with sorting occurring
            after loading.  This buys speed of loading of a large MIDI file
            and better throughput during playback.  The multimap
            implementation and the old (very slow) sorting method can be
            enabled the seq64_features.h module.  Try loading the large
            b4uacuse-stress.midi file and experiment for yourself.  See
            section 5 of the Sequencer64 Developer Reference Manual for the
            gory details.
        -   The LFO window is now built-in by default.  Use --disable-lfo
            if you do not like it.
        -   Added a JACK/ALSA button to show status and bring up a JACK
            connection dialog.
    -   Particular changes since the seq64 fork:
        -   Sequencer64 loads SMF 0 files and splits the channels into separate
            tracks/sequences.
        -   JACK support has been improved, thanks in part to incorporating seq32
            JACK support.
        -   Pause functionality (still tweaking it) has been added to playback
            under ALSA.  The Pause button leaves playback where it is, and resumes
            when playback restarts.  Stop rewinds the sequences.  Also added is a
            Pause key (by default, the period).  Pause can be disabled at
            configure time (--disable-pause).
        -   Long sequences/patterns auto-scroll horizontally during playback
            to keep up with the progress bar in the sequence/pattern editor.
        -   Highlighting of the current sequence brought up for editing.
        -   MIDI Clock support has been fixed.  Sequencer64 interacts better with
            QJackCtl, Hydrogen, and Klick (command-line metronome).  See the
            testing described in contrib/notes/jack-testing.txt.
        -   An event-editing window has been added, for viewing and editing a
            list of events, regardless of event type.  Viewing is fine, editing
            basics work.
        -   Two synchronized song-editor windows can be shown on screen, to
            better arrange songs with a large number of tracks.
        -   Added a more modern-looking, bolder font to the graphical user
            interface, selectable at run-time, in the "user" configuration file.
        -   Added an ALSA --bus option for easier testing against a specific
            hardware/software synthesizer.
        -   Added a --ppqn option to try to play files at the right speed.  Still
            in progress, as the Seq24 PPQN value of 192 affects a lot of code!
            It basically works, but bugs may still lurk.
        -   Added support for keeping performance and sequence user-interfaces in
            editing mode, very helpful for certain crappy laptop trackpads.
        -   Shift-left-click on the pattern slot in the pattern editor toggles
            the playing state of all other patterns.  This works across
            screen-sets.  Shift-left-click on the pattern name or M in the
            song editor toggles the mute state of all other tracks.
        -   Added arrow key support to some of the windows and panes.
            -   The "l" and "r" keys initiate arrow movement of the performance
                markers.
            -   If notes are selected in the pattern editor, the arrow keys can
                be used to move the notes in time and in pitch.
            -   If selected notes are copied-and-pasted, the selection box that
                indicates where they will be dropped can be moved with the arrow
                keys.  Hitting "Enter" drops the notes just like a left-click.
            -   In the performance editor, a pattern can be selected with the
                mouse and moved right/left with the arrow keys.
        -   Added support for using special keys to manipulate some of the
            user-interface elements:
            -   The "l" and "r" keys initiate arrow movement of the performance
                markers, with "x" to escape this mode.
            -   Also supplemented the mouse with "p" to start paint/draw mode, and
                "x" to escape it, in the sequence and song editors.
            -   Add "z" and "Z" keys to zoom out and zoom in the pattern and song
                piano rolls.  "0" restores the default zoom.
        -   Configurable progress bar, font, redraw timeouts, colors, and more.
            More coloring to help show various editing elements.
        -   The "rc" configuration file has been upgraded to support a couple
            more options, including the enabling/disabling of LASH session
            support.
        -   The "user" configuration file is now written, as well as being read.
            It contains more extensive run-time configuration for
            the user-interface.
            -   [user-interface-setting]
                -   Style of the main-window grid
                -   Control height
                -   Allowing two performance editors onscreen
                -   The page settings of scrollbar.
            -   [user-midi-settings]
                -   Global PPQN value
                -   Global beats per bar and per minute, beat width
                -   Global MIDI buss override
        -   Fixed a long-standing (back to seq24) bug that caused the main window
            buttons to grab focus, causing the space bar to press the button, as
            well as doing its start function.
        -   Internal (invisible) work:
            -   The code has been broken up into libraries, for better separation
                between GUI support and the files, MIDI, JACK, and LASH support.
            -   A wide range of MIDI files have been tested, to find bugs that
                can crash the application.  A nice increase in robustness.
            -   Centralized dirtiness-handling to the perform module, and
                improving its accuracy and comprehensiveness.
            -   Set Tempo and Time Signature events are now read from
                non-Sequencer64 MIDI files, and are also saved in the normal
                MIDI format, for compatibility with other sequencers.
            -   Sequencer64 now loads large MIDI files quickly, and plays
                with throughput comparable to seq24.
    -   For more version information, see the NEWS file.

This package is currently oriented to developers.  It is fairly well
organized, fairly well documented, and less mysterious (to us, anyway) than
before.  Please see the INSTALL file for a brief description of installation.

See the ROADMAP file for more information and a kind of TODO list.  Also see
contrib/notes/bugs_to_investigate.  Sequencer64 is well-documented by the
following project, which provides a 100+-page PDF file and its LaTeX source
code:

   https://github.com/ahlstromcj/sequencer64-doc.git

# vim: sw=4 ts=4 wm=4 et ft=sh
