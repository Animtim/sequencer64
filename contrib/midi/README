Contributed MIDI Files
Chris Ahlstrom
2015-09-11 to 2016-01-31

This directory contains contributed MIDI files for examples and testing.
Also see the test files from the midicvt as described in
midicvt-test-files.txt; we found a few bugs and potential features to add
by loading them into Sequencer64.

   allofarow.mid:

        A file having a lot of empty tracks and one filled track.

   ameeting.mid:

        This file yields an error "Unexpected chunk number reading file"
        (with no offset or value information in the error message).
        The header of this file claims the file contains two tracks, but 
        there is a third track at the end that holds an end-of-sequence
        message.  Sequencer64 tries to parse this extra data as its
        "proprietary" track.  We have modified the error message to be
        more accurate.

   buffalo.mid

        A tune with over four sets of tracks, many with minimal numbers of
        notes.  Some of the tracks are just labels. A few consist of
        21 bytes of data:

        00 FF 21 01 00 (obsolete MIDI message setting port number to 0)
        00 B3 07 64 00 B3 0A 40 00 B3 79 00 (3 control changes, channel 3)

        and ending with the 00 FF 2F 00 end-of-track marker, and similar
        for B4, B5, B6, B7, plus some more stuff.

   click_4_4.midi:
   
        Holds a click-track for use with the Seq24-session script.

   reset.mid:
   
        A file that resets all MIDI channels.

   b4uacuse.mid:

        The original MIDI file, created many long years ago.

   b4uacuse-seq24.midi:

        The "b4uacuse.mid" file after opening or importing into Seq24
        0.9.2, and then saving it.  If one reads this file back into
        Seq24, then saves it again, then the result is identical,
        byte-for-byte, to b4uacuse-legacy.midi.

   b4uacuse-legacy.midi:

        The "b4uacuse.mid" file after opening or importing into
        Sequencer64 0.9.9.8 in "--legacy" mode and then saving it.
        b4uacuse-seq24.midi and b4uacuse-legacy.midi are the same size.
        They should be identical, but Seq24 reverses some events every
        time it saves, due to the way it pops certain MIDI events from its
        container.  But, as noted above, saving b4uacuse-seq24.midi again
        in Seq24 removes the reversals, and then the files are identical
        byte-for byte.
        
        Found a few of our own mistakes while getting the file sizes to match!

   b4uacuse-GM-format.midi:
   
        Hopefully, a good General MIDI file; created by using the midicvt
        application on the imported MIDI file.

   b4uacuse-GM-alternate.midi:

        Forgot what process created this, but we use it for testing a lot.

   b4uacuse-GM-doubled.midi:

        The tune with set 1 copied to set 2, for experimentation with sets.

   CountryStrum.midi:

        This file is the CountryStrum.mid SMF 0 file imported into
        Sequencer64, with the SMF 0 track removed, and all the sequences
        moved over to the leftmost position in the main window.

   example1.mid:

        A simple SMF 0 MIDI file from the midicvt project.  Useful in
        testing the channel-split feature, small enough to step through
        under the debugger :-D

   Hapwandr.mid

        A transcription of "The Happy Wanderer", having a BPM of 250.

   hymne.mid

        A Vangelis tune with a BPM of 80 and a PPQN of 96.   It also seems
        to have a lot more "Note On" events than "Note Off" events.
        Weird!

   Itis.mid

        A file with 27 tracks (2 empty), we want to see if it includes
        MIDI buss numbers.

   k_seq.mid

        A "tune" I "wrote", having a BPM of 103 (!), PPQN = 96 (0x60).

   longhair.mid

        "Memories of Professor Longhair", BPM = 115, PPQN = 120 (0x78).

   MIDIBadTrackHdr.mid:

        This bad file has 'mTrk' (not "MTrk") marking its first track.

   signature-samples.midi:

        A file useful for getting the scaling of the user-interface right.

   wpb_yoshimi-buss-0.midi:

        Another song from long ago, configured for the Yoshimi software
        synthesizer, mapped onto bus 0.

# vim: sw=4 ts=4 wm=8 et ft=sh
