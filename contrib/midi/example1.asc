example1.mid

MThd 0 1 96
MTrk
0 TimeSig 4/4 24 8      0  Event skipped
0 Tempo 500000          0  Event skipped
0 PrCh ch=1 p=5         1+ Status C0, channel 0 (MIDI 1), data 5, 1 chan logged
0 PrCh ch=2 p=46        2  Status C0, channel 1 (MIDI 2), data 46, 2 chs logged
0 PrCh ch=3 p=70        3  Status C0, channel 2 (MIDI 3), data 70, 3 chs logged
0 On ch=3 n=48 v=96     4  Status 90, channel 2 (MIDI 3), ...,     3 chs logged
0 On ch=3 n=60 v=96     5  Similar ...
96 On ch=2 n=67 v=64    6  Delta 96, status 90, ch 1(2), RT  96, CT 192
192 On ch=1 n=76 v=32   7+ Delta 96,  RT 192, CT 384
384 Off ch=3 n=48 v=64  8  Delta 192, RT 384, CT 768
384 Off ch=3 n=60 v=64  9  Delta 0,   RT 384, CT 768
384 Off ch=2 n=67 v=64 10  Same
384 Off ch=1 n=76 v=64 11+ Same               CT 768
384 Meta TrkEnd        12  FF 02 00,  Delta 0, RT 384, CT 768 + 1
TrkEnd


Sequencer64 parsing:

Main sequence:

   Delta=0; m[0x17]=FF=meta-->status; 0-->timestamp; type=58; len=4; ...
   This is a time-signature event

   dt me ts ln nn dd mp tb

   00 FF 58 04 04 02 24 08
   ^  ^  ^  ^  ^  ^  ^  ^
   |  |  |  |  |  |  |  |
   |  |  |  |  |  |  |   ------ Number of 32nd notes per beat = 8/32 = QN
   |  |  |  |  |  |   --------- metronome tick = 24 / 24 = whole note?
   |  |  |  |  |   ------------ log base 2 of time signature denominator = 4
   |  |  |  |   --------------- time signature numerator = 4
   |  |  |   ------------------ length of data (4 bytes)
   |  |   --------------------- Meta event type = Time Signature
   |   ------------------------ Meta event flag = FF
    --------------------------- Delta time = 0

   dt me st ln nn dd mp tb

   00 FF 51 03 07 A1 20
         ^     ^
         |     |
         |      --------------- 0x07A120 = 500,000 us / QN
         |                               = 120 QN / min = 120 BPM
          --------------------- Meta event type = Set Tempo

   00 C0 05
      ^  ^
      |  |
      |   --------------------- Program number = 5
       ------------------------ Program Change on 0 (MIDI channel 1)

   00 C1 2E
      ^  ^
      |  |
      |   --------------------- Program number = 46
       ------------------------ Program Change on 1 (MIDI channel 2)

   00 C2 2E                     Similar

   00 92 30 60
      ^  ^  ^
      |  |  |
      |  |   ------------------ Note velocity = 96
      |   --------------------- Note value = 48
       ------------------------ Note On on 2 (MIDI channel 3)

Issue?

   The MIDI header set the ppqn = 96, while default m_ppqn = 192.
   The RunningTime of 96 becomes a CurrentTime of 192.
   RunningTime is just accumulated, while CurrentTime is scaled from the
      RunningTime to set the time-stamp of the event.
   So far, so good.  But make sure the 96 doesn't propogate further.

Issue?

   The code sets the timestamp to the CurrentTime, not the Delta time.
   (It has to do this to be able sort events by time.)  When saving
   the file, it converts the timestamps back to delta times by subtraction.

Issue?

   After the EOT event is logged, the code then increments CurrentTime by 1,
   and calls seq.set_length() with that time.

   set_length() makes sure the length is at least m_ppqn/4.

Issue!

   In the split_channel() function, we do not need to convert the timestamps to
   delta times.  That is only needed when *saving* the events.

