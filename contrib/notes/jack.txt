Qjackctl:

   Readable/Output:

      jack-keyboard:midi out --------------> K        seq64 output port  A
      seq64:jack-keyboard midi_in ---------> J
      seq64:yoshimi midi in ---------------> Y

   Writeable/Input:

      jack-keyboard:midi in <--------------- J        seq64 input port
      seq64:jack-keyboard midi_out <-------- K
      yoshimi:midi in <--------------------- Y        seq64 input port

Options:

   MIDI Clock:

      jack_keyboard:midi_out

   MIDI Input:

      yoshimi:midi in          Cannot activate/connect I/O
      jack_keyboard:midi_in

   seqedit bus dropdown:

      jack_keyboard:midi_out   A

      Why is yoshimi:midi in not an output????

   Commenting out the perform's swap() call changed nothing!!!!!

midi_jack_info::get_all_port_info():

      out:  jack-keyboard:midi_out

      in:   yoshimi:midi in
      in:   jack-keyboard:midi in

Connect issues with JACK, jack-keyboard, yoshimi, and seq64:

   midibus jack-keyboard:midi_in (is input port):

      midibus::api_connect() has null m_rt_midi pointer.  Fixed as a
      configuration-related issue.

      Clicking on jack-keyboard:midi_out in the MIDI Input tab is meant to
      connect the output of the jack-keyboard application to seq64's
      selected MIDI input port.

      mmbus::set_input(0, true)

         m_inbus_array[0].m_bus is  jack-keyboard:midi_out

   Back to the beginning:

      At startup, we register "jack-keyboard midi_out".
      When we click ...., we try to register it again!  Why
      does it get registered at startup???  It is set to off
      in the "rc" configuration!

         jack-keyboard:midi_out is a Readable Client/Output port
         jack-keyboard:midi_in is a Writable Client/Input port



Latest run:

rtmidi % ./Seq64rtmidi/seq64 -J
[Reading rc configuration /home/ahlstrom/.config/sequencer64/sequencer64.rc]
[Reading user configuration /home/ahlstrom/.config/sequencer64/sequencer64.usr]
= jack_client_open(seq64)
[JACK server already started]
= jack_set_process_callback(info)
= jack_client_open(seq64-transport)
[JACK server already started]
= jack_get_client_name(sync)
= jack_get_uuid_for_client_name(sync)
[JACK client:uuid is seq64-transport:4]
= jack_on_shutdown(sync)
= jack_set_process_callback(sync)
= jack_set_session_callback(sync)
= jack_set_timebase_callback(sync)
[JACK sync master]
5 rtmidi ports created:
Input ports (3):
  [0] 0:0 system:midi_playback_1
  [1] 1:1 jack-keyboard:midi_in
  [2] 2:2 yoshimi:midi in
Output ports (2):
  [0] 0:0 system:midi_capture_1
  [1] 1:1 jack-keyboard:midi_out

midibus '[0] 0:0 system:midi_playback_1' created
midibus '[1] 1:1 jack-keyboard:midi_in' created
midibus '[2] 2:2 yoshimi:midi in' created
midibus '[0] 0:0 system:midi_capture_1' created
midibus '[1] 1:1 jack-keyboard:midi_out' created
= jack_port_register(system midi_capture_1)
= jack_port_register(jack-keyboard midi_out)
= jack_activate(info)
= jack_connect(jack)
= jack_connect(jack)
= jack_activate(sync)

MIDI Options:

   Clocks:

      0 system:midi_playback_1
      1 jack-keyboard:midi_in
      2 yoshimi:midi in

   Inputs:

      0 system:midi_capture_1
      1 jack-keyboard:midi_out

sequencer64.rc:

   [midi-clock]

   3    # number of MIDI clocks/busses

   # Output buss name: [0] 0:0 system:midi_playback_1
   0 0  # buss number, clock status
   # Output buss name: [1] 1:1 jack-keyboard:midi_in
   1 0  # buss number, clock status
   # Output buss name: [2] 2:2 yoshimi:midi in
   2 0  # buss number, clock status

[midi-input]

   2   # number of input MIDI busses

   # [0] 0:0 system:midi_capture_1
   0 0
   # [1] 1:1 jack-keyboard:midi_out
   1 0

Qjackctl:

	Readable/Output =

	 	jack-keyboard:midi_out <-------------------
		system:midi_capture_1 (nanoKey) <--------- | ------
                                                 |       |
	Writable/Input =                              |       |
      jack-keyboard:midi_in                      |       |
      seq64:jack-keyboard midi_out <-------------        |
      seq64:system midi_capture_1  <---------------------
      system:midi_playback_1 (nanoKey)
      yoshimi:midi in

If we click on MIDI Input jack-keyboard:midi_out, we get:

   = jack_port_register(jack-keyboard midi_out)
   register_port: JACK error registering port jack-keyboard midi_out

Similarly for the virtual keyboard:

   = jack_port_register(system midi_capture_1)
   register_port: JACK error registering port system midi_capture_1

Seq64 shows an output for yoshimi:midi in, but there is no
"seq64:yoshimi midi in" shown in the Readable/Output tab.

BEEF UP THE OUTPUT.


