Bugs and Upgrade Ideas
Chris Ahlstrom
2015-10-27 to 2015-10-30

In no particular order...

-  Provide an "infinite" pattern that will not repeat (unless specified
   multiple times in the performance editor).
-  Muting in mainwid or perfnames should be reflected in both views.
-  Extra lines appearing in perfnames/perfroll when starting playback in
   perfroll.
-  Anyway to double-click a pattern to edit, without selecting it?
-  Moving a pattern doesn't turn on any dirty bit, to allow an opportunity for
   saving.  This is a legacy bug.  Tighten up the is-dirty handling for all
   dialogs.
-  Selecting note events is iffy, more so than in legacy.
-  Would be nice to have the sequence editors and performance editor scroll to
   keep the progress bar in view.
-  Would be nice to show the current time/tick/measure/bar in the tune as
   it plays.
-  Would be nice to show the current note/time/tick/measure/bar in sequence
   editor and performance editor windows.
-  "Infinite" sequences
-  Stop progress bar when pattern not playing in performance editor.
-  New stuff to implement in all relevant modules:
   -  Use of is_channel_msg(), is_one_byte_msg(), is_two_byte_msg()
   -  The new variants of the SEQ64_CLICK_xxxxx macros.
-  Get variable PPQN support fully working!
-  Offload the scale functionality to a new "scale" class.
-  Update maintime to support use of the the current beat-width, instead of
   using 4 all the time.
-  Investigate adding wrappers for draw_drawable().  (Done for the most common
   use case).
-  Selecting some notes of the same value, and trying to elongate or shrink
   them can make a note of "infinite" length.
-  When closing a file, either need to blank out or close any pattern-editor
   windows and the performance editor; something like that.
-  Add one or two digits to the size of the "Sequence length in bars" field, at
   the expense of its pixmap button.  Add an "infinite" option to that value.
-  Finish adding elements to the "user" configuration file.

draw_drawable( gc , src , xsrc , ysrc , xdest , ydest , width , height ):

-  Drawable->draw_drawable(GC, Pixmap, x, y, x0, y0, fontw, fonth)
-  Drawable->draw_drawable(m_gc, Drawable, x, y, x0, y0, fontw, fonth)
-  Drawable->draw_drawable(m_gc, Pixmap, x, y, x0, y0, fontw, fonth)
-  Drawable->draw_drawable(m_gc, m_background, x, y, x0, y0, fontw, fonth)
x  m_window->draw_drawable(m_gc, m_pixmap,  ...)

-  Initiatives from other projects ("-" means "not done (yet)", "y" means
   "partially done", "x" means done, "0" means "will not do"):
   -  Porting to BSD:         https://github.com/vext01/seq24
   y  AUR archive files:      https://github.com/aur-archive/seq24
   x  freddix patches:        https://github.com/freddix/seq24
   x  pld-linux patches:      https://github.com/pld-linux/seq24
   x  OpenMandriva patches:   https://github.com/OpenMandrivaAssociation/seq24
   0  Launchpad mapper:       https://github.com/Excds/seq24-launchpad-mapper
   -  Fork of seq24:          https://github.com/orlammd/SC_seq24
   0  git-ingore, license:    https://github.com/franticspider/seq24plus
   0  Basic inspiration:      https://github.com/analoq/seq
   0  In-browser seq24:       https://github.com/briandunn/seq25
   0  One-up of seq25:        https://github.com/jgdavey/seq26
   0  Ruby implementation:    https://github.com/chriserin/seq27
   -  Song-editing emph:      https://github.com/sbrauer/seq42


