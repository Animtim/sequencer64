Bugs and Additional Upgrade Ideas
Chris Ahlstrom
2015-10-27 to 2016-01-28 (New bug)

In no particular order...  "y" means "in progress", and "x" means it is
basically done.

-  See BUG REPORTS below.
-  We need to be able to empty out any sequences and close any editors
   when loading a new file, otherwise Sequencer64 can freeze.
-  In the pattern editor piano roll, implement Undo for the arrow keys in the
   same way as for the mouse.
-  The "increase size of grid" button on the perfedit doesn't work, or at least
   doesn't show any visual feedback.
x  In the perfedit window, make the vertical scroll go by 8 tracks instead of
   just 1.  This is now a configuration feature for both horizontal and
   vertical scrolling.
x  In the standard seq24 view, when a pattern is moved, it leaves a black
   line at the bottom of the pattern slot it just left.
-  Is the --pass-sysex command actually supported?  Seq24 threw SysEx away.
x  Consider adding support for reading normal MIDI TimeSig and Tempo data from
   normal MIDI files, as found in example1.mid; also get some other files to
   test.
x  Add support for SMF (MIDI format) 0.
y  Tighten up the is-dirty handling for all dialogs:
   x  Moving a pattern does not turn on any dirty bit, to allow an opportunity
      for saving.  This is a legacy bug.
   y  Can the perform object control all the is-dirty stuff?  All the GUIs use
      it!
   x  Just opening a sequence should not dirty the song.
   -  Just selecting some notes should not dirty the song.
   x  Cutting out sequences should cause a query for saving.
   x  Moving a pattern to another slot should dirty the song.
   x  Opening the performance editor should not dirty the song.
   -  Just entering draw mode in the performance editor should not
      dirty the song.
   -  Modifications in the performance editor should dirty the song.
      x  Moving a segment, whether by arrows or mouse.
      x  Adding a segment, whether by keys or mouse.
      x  Deleting a segment, whether by keys or mouse.
-  Implement, if possible, the "p/x" keys in the seqevent area.
-  Just noticed that snap is saved.  Where?  Is this a bug or a feature?
x  A second song editor view for reference?  This idea seems like it can
   work, with communicate through the perform object, perhaps.
x  Add an option that prevents the automatic saving of the "usr" configuration
   file on exit.  Currently, command-line settings like --bus get saved in
   the file, a bit of a surpise/annoyance.
-  When closing a file, either need to blank out or close any pattern-editor
   windows and the performance editor; something like that.
-  Document that right-click on the pattern editor left and right scrollbar
   arrows act like Home and End for the seqroll.
-  Better progress and status indicators:
   -  Show the following items in the sequence editor:
      -  The sequence number.
      -  The current "time" of the progress bar.
   -  Show the following items in the song editor:
      -  The current "time" of the "L" marker.
      -  The current "time" of the "R" marker.
   -  Would be nice to have the sequence editors and performance editor scroll
      to keep the progress bar in view.
   -  Would be nice to show the current time/tick/measure/bar in the tune as
      it plays.
   -  Would be nice to show the current note/time/tick/measure/bar in sequence
      editor and performance editor windows.
   -  Stop progress bar when pattern not playing in performance editor.
-  Would be nice to have a PAUSE button and PAUSE feature.
-  Add the legacy-format option to the "rc" configuration file?
-  Seq24/Sequencer64 do n0t write out the c_midictrl data for any sequences.
   Something to learn more about and fix.
-  Add optimization to write out minimal qmute etc. to the MIDI file when it is
   not being used.
-  Add swing-quantization to the seqedit menu.
-  Would be nice to be able to Ctrl-Home, Ctrl-End, Page Up, and Page Down
   in the Song Editor.
-  We now have the same file imported twice, into screen-set 1 and screen-set
   2.  Now can we have --bus n do n and n+1 (each next screen-set goes to the
   next buss?
-  Sometimes the editing of event values in the event data section
   will not work. The workaround is to do a Ctrl-A, and the click in
   the roll to deselect the selection; that makes the event value
   editing work again.
-  The pattern right-click Cut menu entry does not seem to work.
   The loop or pattern remains in place.  Is this actually meant to
   cut selected events?
-  While one is typing in the name of the set in this field, the
   keystrokes will affect the panel window, causing playback to
   start and pattern boxes to be toggled!
-  While one is typing in the number of the set in the Set number field,
   the keystrokes will affect the panel window, causing playback to
   start and pattern boxes to be toggled!
-  Right click to edit a new sequence automatically shows it in perfnames,
   but not in mainwid.
-  Should mark empty tracks in the background-sequence selector, or just not
   show them.  Very low priority.
-  More feedback when adding a new sequence:
   -  Create a new sequence and add some notes.  It will not appear in the
      patterns window until you click in the patterns window, in the same slot
      where New was selected.
   -  It would be nice if it were highlighted somehow, maybe cyan or dark grey
      or some color that contrasts a little with the default background color
      that it uses.  All we could get to work well was reddening the progress
      line.
   -  You also have to dick around in the song editor to get a new pattern to
      appear.
-  The display of the END marker is missing in the seqroll for a time signature
   of 7/4 and a length of 8 bars.
-  That 7/8:8 sequence, when draw-clicked into the song editor, takes up 14
   measures!!!  A 4/4 sequence takes up 1.
-  Create a long note and a short note.  Select the shorter note so it is
   orange.  Drag it over to the middle of the longer note.  Orange will
   cover the length of the short note, plus bleed over to the right to the end
   of the longer note.  Other minor issues with overlapping notes.
   Can get notes chopped and resized!
-  Could use a small view of a sequence, or at least the overall song,
   to see where you are in it.
-  Sometimes the editing of event values in the event data section
   will not work. The workaround is to do a Ctrl-A, and the click in
   the roll to deselect the selection; that makes the event value
   editing work again.
-  The pattern right-click Cut menu entry does not seem to work.
   The loop or pattern remains in place.  Is this actually meant to
   cut selected events?
-  While one is typing in the name of the set in this field, the
   keystrokes will affect the panel window, causing playback to
   start and pattern boxes to be toggled!
-  While one is typing in the number of the set in the Set number field,
   the keystrokes will affect the panel window, causing playback to
   start and pattern boxes to be toggled!
-  In midibus, make the buss name variable, instead of hard-wired to "seq24".
   It should be an optional command-line option, and default to "Seq64".
   And in the same module, function init_in() should use it as well.
   Like legacy mode, using a link named "seq24" to run the app should
   also change this name to seq24, as should --legacy itself!
   Also init_in_sub().
-  --manual_alsa_ports on the command line does NOT override the "rc"
   configuration file setting!
-  --manual_alsa_ports, etc., should be --manual-alsa_ports.
-  Can we provide a way to move a note a tiny amount without changing the beat
   size?
-  Ctrl-Z for data/event does n0t work unless the piano roll has the focus.
   Worth worrying about?
-  If POSSIBLE, avoid loading the "user" configuration file, or at least
   parts of it, when "manual-alsa-ports" is set to "1".
   -  ACTUALLY, THIS SEEMS TO BE WORKING PARTLY: the right busses are shown,
      but the sequencer64.usr file controllers and channels are still shown.
   -  Also what happens is that, if manual-alsa-ports is false, and the "user"
      file has entries, but fewer entries than what the system provides by
      default, then the additional system entries are visible.  NOT SURE IF
      THIS IS A BUG, A FEATURE, or A WARNING TO THE USER.
-  WEIRD!  Opening the File / Options / MIDI Input tab with "manual alsa"
   set to true, the port shown is "[1] seq24 1", not the  "[0] seq24 0"
   that I expected.  However, check this out:
      % arecordmidi -l
       Port    Client name                      Port name
       14:0    Midi Through                     Midi Through Port-0
      129:0    seq24                            [1] seq24 1
      129:1    seq24                            [2] seq24 2
      129:2    seq24                            [3] seq24 3
      129:3    seq24                            [4] seq24 4
      129:4    seq24                            [5] seq24 5
      129:5    seq24                            [6] seq24 6
      129:6    seq24                            [7] seq24 7
      129:7    seq24                            [8] seq24 8
      129:8    seq24                            [9] seq24 9
      129:9    seq24                            [10] seq24 10
      129:10   seq24                            [11] seq24 11
      129:11   seq24                            [12] seq24 12
      129:12   seq24                            [13] seq24 13
      129:13   seq24                            [14] seq24 14
      129:14   seq24                            [15] seq24 15
      129:15   seq24                            [16] seq24 16
-  Provide an "infinite" pattern that will not repeat (unless specified
   multiple times in the performance editor).
   "Infinite" sequences, aka a "track" as opposed to a sequence.
   Or, perhaps the track can be set to any length (add 128 and 256
   to the list???), but be marked as a one-shot timer, set to inactive
   once it is done, never to sound again until the next playback.
-  Support for the Non Session Manager.
-  Muting in mainwid or perfnames should be reflected in both views.
-  Extra lines appearing in perfnames/perfroll when starting playback in
   perfroll.
-  Anyway to double-click a pattern to edit, without selecting it?
   Or by holding the Shift key or Mod4 key with the letter?
-  The 750 x 500 for sequence and song editor size should be configurable in
   the "user" file.
-  Selecting note events is iffy, more so than in legacy.
-  Would be nice if ctrl-arrow or some other key could shorten or lengthen the
   note by very small increments.
-  Would be nice if shift-left-click would deselect only the one note clicked
   on.
-  New stuff to implement in all relevant modules:
   -  Use of is_channel_msg(), is_one_byte_msg(), is_two_byte_msg()
   -  The new variants of the SEQ64_CLICK_xxxxx macros.
-  Get variable PPQN support fully working!
-  Update maintime to support use of the the current beat-width, instead of
   using 4 all the time.
-  Selecting some notes of the same value, and trying to elongate or shrink
   them can make a note of "infinite" length.
-  Finish adding elements to the "user" configuration file.
y  Offload the scale functionality to a new "scale" class.
y  Investigate adding wrappers for draw_drawable().  (Done for the most common
   use cases).
y  Would be nice to be able move selected notes in the seqroll using
   the arrow keys, in one-key and one-snap resoltion increments.
   See seq24seqroll.cpp, line 305.  Done.  Added keys for
   paint mode (p, Shift-P), left, right, down, and up, enabled if any notes
   are selected.  Still need to figure out what left, right, and home do
   otherwise, needs some graphical feedback.
y  Initiatives from other projects ("-" means "not done (yet)", "y" means
   "partially done", "x" means done, "0" means "will not do"):
   0  Porting to BSD:         https://github.com/vext01/seq24
         Obviously a very old fork of seq24, with a lot of diffs from 0.9.2.
   y  AUR archive files:      https://github.com/aur-archive/seq24
   x  freddix patches:        https://github.com/freddix/seq24
   x  pld-linux patches:      https://github.com/pld-linux/seq24
   x  OpenMandriva patches:   https://github.com/OpenMandrivaAssociation/seq24
   0  Launchpad mapper:       https://github.com/Excds/seq24-launchpad-mapper
   0  Fork of seq24:          https://github.com/orlammd/SC_seq24
         An apparent odd mix of versions, and some French cusses.
   0  git-ingore, license:    https://github.com/franticspider/seq24plus
   0  Basic inspiration:      https://github.com/analoq/seq
   0  In-browser seq24:       https://github.com/briandunn/seq25
   0  One-up of seq25:        https://github.com/jgdavey/seq26
   0  Ruby implementation:    https://github.com/chriserin/seq27
   0  Song-editing emph:      https://github.com/sbrauer/seq42
         Another old fork, lacking mainwid and perfedit, but has a couple of
         nice ideas to examine.
x  Add one or two digits to the size of the "Sequence length in bars" field, at
   the expense of its pixmap button.  Add an "infinite" option to that value.
x  Why is the very first, empty sequence, missing its bottom row of numbers
   (except for the ui hot-key).  (It was a bug.)
x  Make the GUI box-drawing and number options for configure.ac.  They are
   now part of the "user" configuration file.  The basic appearance of the grid
   is also tailorable to some extent.
x  Make the font selectable from the "user" configuration file.
x  Add a number to the slot when empty, for clarity.  This is now an option in
   the "user" configuration file.
x  Try to add usage of left/right arrows to perftime to permit fine
   adjustments, if this cannot work by hold the ctrl or ctrl-shift keys.
   Need a more detailed view to get it accurate.  Or just adjust the snap.
   Anyway, now "l" and "r" turn on the arrow keys for moving the "L" and "R"
   markers.
x  Store new values c_musickey = 0x24240011 and c_musicscale = 0x24240012 in
   the proprietary header of the MIDI song, when legacy mode is not in force.
   Also the number of the background sequence, c_backsequence = 0x24240013.
   These are stored only if different from the defaults, so as not to waste
   space.  One minor issue, actually a long-standing feature, is that
   opening a key/scale/background-modified sequence causes any sequence opened
   thereafter to take on those values.  Perhaps too surprising or tricky a
   feature.  We might make this a GLOBAL setting, but more tricks abound.
x  Using SEQ64_ key and event macros instead of GDK_ key and event macros.
x  I forgotten instructions of use. 'p' to activate paint, 'P' (shift p) to
   deactivate.  Remember to "select" the piano roll instead of writing on other
   controls, like the name edit. that is a little tricky but you will overcome
   that.  ivan
   seqroll.cpp:
   >               m_seq->remove_marked();
   >               ret = true;
   >           }
   > +         if ( a_p0->keyval ==  GDK_p ){
   > +             set_adding( true );
   > +             ret = true;
   > +         }
   > +         if ( a_p0->keyval ==  GDK_P ){
   > +             set_adding( false );
   > +             ret = true;
   > +         }
   >
   >           if ( a_p0->state & GDK_CONTROL_MASK ){
      We have now incorporated this feature (2015-11-01).


BUG REPORTS:

Date: Sat, 19 Dec 2015 20:48:34 -0800
From: Tim Deagan <notifications@github.com>
To: ahlstromcj/sequencer64 <sequencer64@noreply.github.com>
Cc: "C. Ahlstrom" <ahlstromcj@gmail.com>
Subject: Re: [sequencer64] Install-recursive and .seq24rc equivalent (#2)

Sorry to be so slow, all my free time is spent trying to get my upcoming
book across its jan15 finish line.  But (for deeply nerdy reasons,) I
always spend a bunch of my christmas vacation time learning new source
code, so I've set up a Netbeans environment for sequencer64 (I have to
confess I'm a Windows developer for a living and really gravitate towards
IDEs.  I've worked in linux for decades, but linux as an IDE breaks my
heart.)

In any event, after some code surfing and debugging, it looks like a lot of
the odd behavior I experience with mute groups is possibly because of the
line: if ((i == m_playing_screen) && m_tracks_mute_state[j])
in perform::mute_group_tracks () isn't working as I imagined it should.

Gdb tells me that m_playing_screen never changes from 0 regardless of the
m_screenset value.  I believe this is why, no matter what screen you're on
when you hit a mute group key, it ignores that screen and applies the mute
group to the first screen.

I'll try i == m_screenset as an alternative sometime in the next few days.
I just wanted to let you know I was still thinking about this.




Date: Tue, 19 Jan 2016 14:47:50 -0800
From: Daniel Appelt <notifications@github.com>
To: ahlstromcj/sequencer64 <sequencer64@noreply.github.com>
Subject: [sequencer64] Jack Transport Master behaviour is very "jumpy" (#10)

This report might be seen as a follow up to #8 I am trying to use sequencer64 as
transport master for jack under Arch Linux When I hit play in sequencer64, the
playroll visualization in the top right corner of the main window is jumping
around very wildly

In the simplest setup, I just start these applications:

- jack2 via jackdbus
- qjackctl
- sequencer64

In the options, I have just ticked the checkbox for "Transport Master" If I hit
play in sequencer64, I get the jumpy behavior as described above There is no
position indicator moving at all in the editor window In qjackctl, the BBT display
is also jumping, but that might be more or less okay as the value is at least
steadily increasing If I go down to 20bpm in sequencer64, suddenly I can see the
position indicator jumping around in the pattern editor

If, in addition, I send Midi clock signals from sequencer64 to Rebirth (running
under wine), Rebirth is syncing to a tempo of 500bpm while I was expecting to see 
104bpm which I have set in sequencer64 This might explain the jumpy behavior
described above The same setup works fine without synchronizing the jack transport
that is if no jack transport checkbox is ticked in the options

In seq24, jack transport synchronization worked better (mostly) Seq24 does not
send correct Midi clock signals though



Date: Tue, 19 Jan 2016 15:28:23 -0800
From: Daniel Appelt <notifications@github.com>
To: ahlstromcj/sequencer64 <sequencer64@noreply.github.com>
Subject: Re: [sequencer64] Jack Transport Master behaviour is very "jumpy" (#10)

I just did a further test with the metronome
[klick](http://das.nasophon.de/klick/). In addition to the simple setup, I start
it like this:

`klick -j -P`

where -j means "follow jack transport BBT info (no tempo map)". This indeed leads
to the correct result with respect to the metronome!

So, for now, this just leaves me with two issues when using the jack transport
master option:

- Midi clock signals seem to be wrong
- visualisations are jumpy


Date: Fri, 29 Jan 2016

% midicvt hymne-ppqn-384.mid hymne-ppqn-384.asc
? Error at MIDI file offset 12473 [0x30b9]
Error: Garbage at end 'readtrack(): unexpected running status'

This means Sequencer64 is doing something wrong is saving hymne.mid when
PPQN == 384

# vim: sw=4 ts=4 wm=4 et ft=sh
